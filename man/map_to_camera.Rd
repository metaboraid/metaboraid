% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_to_camera.R
\name{map_to_camera}
\alias{map_to_camera}
\title{Map the identification results to quantification}
\usage{
map_to_camera(
  input_camera = NA,
  identification_result = NA,
  ppm = 10,
  rt = 10,
  higher_the_better = TRUE,
  score_column = NA,
  impute = FALSE,
  mapping_method = "fast",
  ncores = 1,
  verbose = FALSE
)
}
\arguments{
\item{input_camera}{A CAMERA object (results of preprocessing using CAMERA)}

\item{identification_result}{dataframe for example from running one of the search engines}

\item{ppm}{Precursor ppm mass deviation for matching features and identification parent ions. Default 10}

\item{rt}{Retention time tolerance for matching features and identification parent ions. Default 10}

\item{higher_the_better}{If the score of the search engine is higher the better score. Default TRUE}

\item{score_column}{Which column of identification_result shows the score.}

\item{impute}{Whether to impute the unknown mass traces using PC groups}

\item{mapping_method}{Mapping method to use. It has to be one regular, fast, or parallel.}

\item{ncores}{Number of cores if mapping_method is parallel}

\item{verbose}{Show information about different stages of the processes. Default FALSE}
}
\value{
A list with two elements: peakMatrix, variableData. peakMatrix contains the peak information from CAMERA and variableData includes the identification information. The first columns of the both matrices are the key to match these two dataframes.
}
\description{
This function allows you to map the identification results to quantification data from CAMERA.
}
\details{
map_to_camera<-function(input_camera=NA,

This is normally the last function applied on the data. The purpose of this function is to provide ready to analyze data by simply finding the identified features.
The option impute uses CAMERA PC groups to impute identification results within this group. For example if one of the members has been identified, the rest will be imputed based on this member.
We always take the top scoring hit for imputing and for mapping
}
\examples{

library(CAMERA)
library(metaboraid)
# Read MS1 and MS2 files
ms1_files<-system.file("ms1data",c("X1_Rep1.mzML","X2_Rep1.mzML"),package = "metaboraid")
ms2_files<-system.file("ms2data",c("sample1.mzML","sample2.mzML"),package = "metaboraid")

# mass trace detection
xs <- xcmsSet(ms1_files,method="centWave",ppm=30,peakwidth=c(5,10))

# mass trace matching
xsg <- group(xs)

# convert to CAMERA
xsa <- xsAnnotate(xsg)

# Group mass traces
anF <- groupFWHM(xsa, perfwhm = 0.6)

# Detect isotopes
anI <- findIsotopes(anF, mzabs = 0.01)

# Group using correlation
anIC <- groupCorr(anI, cor_eic_th = 0.75)

# Find adducts
anFA <- findAdducts(anIC, polarity="positive")

# map features and MS2s
mapped_features<-map_features(inputMS2s = ms2_files,input_camera = anFA,ppm = 10,rt = 10)

# Map adducts
mapped_adducts<-map_adducts(inputMS2List=mapped_features,input_camera=anFA,
                            precursorppm=10,
                            fragmentppm=20,fragmentabs=0.01,minPrecursorMass=NA,maxPrecursorMass=NA,
                            minPeaks=10,maxSpectra=10,mode="pos",adductRules="primary",
                            outputDir="general_parameters_4",searchMultipleChargeAdducts=T,
                            includeMapped=T,includeUnmapped=F,verbose=T)

# Run the search
ID_results<-run_sirius("parameter_files.zip",database = "all",ncores = 2,progress_bar = T,verbose = T,results_folder = "results",chech_file_interval = 2,timeout = 600,conda = "auto")

# map ID to features

final_results<-metaboraid:::map_to_camera(input_camera = anFA,identification_result = ID_results,ppm = 10,rt = 10,higher_the_better = T,score_column = "SiriusScore",impute = F,mapping_method = "fast")

}
