% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_chemdistiller.R
\name{run_chemdistiller}
\alias{run_chemdistiller}
\title{Perform identification using Chemdistiller}
\usage{
run_chemdistiller(
  parameter_zip_files = NA,
  database = NA,
  database_file = NA,
  svm_model_path,
  max_number_of_compound = 1,
  ncores = 1,
  progress_bar = T,
  verbose = F,
  conda = "auto",
  env = "metaboraid_package",
  results_folder = NA,
  chech_file_interval = 2,
  total_check_time = 20,
  timeout = 600
)
}
\arguments{
\item{parameter_zip_files}{A zip file containing MS2 parameter generated by \code{\link{map_adducts}}}

\item{database}{Name of the database to use: This has to be according to the database_file and the folder. See details.}

\item{database_file}{Absolute path to a text file containing the paths to the folders containing the databases.}

\item{svm_model_path}{Absolute path to a folder containing uncompressed model files.}

\item{max_number_of_compound}{Maximum number of compounds to report for each ion. Default 100}

\item{ncores}{Number of cores to use for parallel processing. Default 1}

\item{progress_bar}{Whether to show progress bar or not. Default FALSE}

\item{verbose}{Show information about different stages of the processes. Default FALSE}

\item{conda}{Conda binary to use. Default auto}

\item{env}{conda environment used to run the process. Default metaboraid_package}

\item{results_folder}{a path to a folder where results for EACH ion will be returned}

\item{chech_file_interval}{not used}

\item{total_check_time}{not used}

\item{timeout}{The maximum number of seconds to wait for a single out to give a result. Default 600}
}
\value{
A dataframe containing the identified ions. The dataframe contains search engine and database specific information but also tree important columns: parentMZ, parentRT, fileName which are used to trace the ions by the downstream processes.
}
\description{
This function allows you to perform identification using Chemdistiller
Please note that you need to have Chemdistiller, e.g using \code{\link{install_tools}} only on Linux or IOS.
For Windows see the details
}
\details{
We install Chemdistiller in metaboraid_package environment.

Fixing database:
Care must be taken for preparing data for Chemdistiller. In order to get this function to work. You need to first prepare the datasets:
\enumerate{
\item Create a folder where you want to place the datasets (for examples "DBs")
\item Visit \url{https://www.mediafire.com/folder/v5l4380gqbvie/DBs} and download the datasets of interest (h5 files).
\item Please the downloaded files in the folder you created in step 1. If you downloaded zip files, unzip the in the folder
\item Find the absolute path to the folder. For example /home/youName/metabolomics/DBs
\item create a text file somewhere on your system. For example /home/youName/metabolomics/mydatabases.txt
6 Add the absolute path to the folder (step 4) and place in the text file.
\item You can now set database_file to /home/youName/metabolomics/mydatabases.txt
\item To set database parameter, look at the files you have downloaded. They start with the database name followed by underscore. So if you have downloaded "LipidMaps_\link{21_53_1214_01_2017}.h5" you need to set database="LipidMaps" when running the function
}

Fixing svm_model_path:
\enumerate{
\item Create a folder on your system for example "SVMs"
\item Download ONE of the models from here: \url{https://www.mediafire.com/folder/v4lb8s2nns9c6/SVMs}
\item Unzip the file in the folder you have created in step 1
\item Find the abosolute path to the folder you have created in step 1 (e.g. /home/youName/metabolomics/SVMs)
\item Set svm_model_path="/home/youName/metabolomics/SVMs" when running the function
}
}
\examples{

library(CAMERA)
library(metaboraid)
# Read MS1 and MS2 files
ms1_files<-system.file("ms1data",c("X1_Rep1.mzML","X2_Rep1.mzML"),package = "metaboraid")
ms2_files<-system.file("ms2data",c("sample1.mzML","sample2.mzML"),package = "metaboraid")

# mass trace detection
xs <- xcmsSet(ms1_files,method="centWave",ppm=30,peakwidth=c(5,10))

# mass trace matching
xsg <- group(xs)

# convert to CAMERA
xsa <- xsAnnotate(xsg)

# Group mass traces
anF <- groupFWHM(xsa, perfwhm = 0.6)

# Detect isotopes
anI <- findIsotopes(anF, mzabs = 0.01)

# Group using correlation
anIC <- groupCorr(anI, cor_eic_th = 0.75)

# Find adducts
anFA <- findAdducts(anIC, polarity="positive")

# map features and MS2s
mapped_features<-map_features(inputMS2s = ms2_files,input_camera = anFA,ppm = 10,rt = 10)

# Map adducts
mapped_adducts<-map_adducts(inputMS2List=mapped_features,input_camera=anFA,
                            precursorppm=10,
                            fragmentppm=20,fragmentabs=0.01,minPrecursorMass=NA,maxPrecursorMass=NA,
                            minPeaks=10,maxSpectra=10,mode="pos",adductRules="primary",
                            outputDir="general_parameters_4",searchMultipleChargeAdducts=T,
                            includeMapped=T,includeUnmapped=F,verbose=T)

# Run the search

run_chemdistiller(parameter_zip_files="parameter_files.zip",database="LipidMaps",
database_file="/home/youName/metabolomics/mydatabases.txt",
svm_model_path="/home/youName/metabolomics/SVMs/",
max_number_of_compound=10,ncores = 10)

}
